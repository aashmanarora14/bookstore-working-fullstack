apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-new          # ðŸ‘ˆ new PVC name to avoid reusing old dirty disk
  namespace: bookstore
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2        # or gp3 if available
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb
  namespace: bookstore
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS books (
      id INT AUTO_INCREMENT PRIMARY KEY,
      title VARCHAR(255),
      author VARCHAR(255)
    );
    INSERT INTO books (title, author) VALUES
    ('The Pragmatic Programmer', 'Andy Hunt'),
    ('Clean Code', 'Robert C. Martin');

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: bookstore
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d   # ðŸ‘ˆ auto-run init.sql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc-new
        - name: mysql-initdb
          configMap:
            name: mysql-initdb

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: bookstore
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
